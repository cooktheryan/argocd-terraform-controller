name: Validate Terraform Argo
on: 
  push:
    branches: ["main", "release*"]
    tags: ["*"]
  pull_request:
    branches: ["main", "release*"]

env:
  GO_VERSION: "1.17"
  CONTROLLER_IMAGE: "quay.io/rcook/argocd-terraform-controller:latest"


jobs:
  build-controller:
    name: Build-controller
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Test
        run: make test

      - name: Build controller container
        run: make docker-build IMG=${CONTROLLER_IMAGE}

      - name: Export container image
        run: docker save -o /tmp/controller.tar ${CONTROLLER_IMAGE}

      - name: Save container as artifact
        uses: actions/upload-artifact@v1
        with:
          name: controller
          path: /tmp/controller.tar

  push-controller:
    name: Push controller image to registry
    needs: [build-controller]
    runs-on: ubuntu-20.04

    steps:
      - name: Load container artifact
        uses: actions/download-artifact@v1
        with:
          name: controller
          path: /tmp

      - name: Import container image
        run: |
          docker load -i /tmp/controller.tar
          docker inspect ${CONTROLLER_IMAGE}

      - name: Login to the registry
        run: |
          [[ "${CONTROLLER_IMAGE}" =~ ^([^/]+)/[^/]+/[^/]+ ]] && REGISTRY="${BASH_REMATCH[1]}" || REGISTRY="quay.io"
          echo "Attempting docker login to: ${REGISTRY}"
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin ${REGISTRY}
   
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: "${CONTROLLER_IMAGE}"